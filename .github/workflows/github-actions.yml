name: github-actions

on:
  push:
    branchs:
      - develop
      - master
#  pull_request:
#    branchs:
#      - master

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v2-beta
#        with:
#          node-version: '14'
#          check-latest: true
#
#      - name: Install NPM dependencies
#        run: npm install
#
#      - name: Compile assets for production
#        run: npm run production

# RUN ONLY ON MASTER PUSH
  deploy:
    needs: tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'
          check-latest: true

      - name: Install NPM dependencies
        run: npm install

      - name: Compile assets for production
        run: npm run production

      - name: Deploy to server
        env:
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USERNAME }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_dir: "./"
          remote_dir: "/var/www/blog/"
        run: |
          mkdir ~/.ssh
          echo "$remote_key" > ~/.ssh/gh_actions_key
          chmod 600 ~/.ssh/gh_actions_key
          rsync  -qavzr --delete --exclude '/vendor/*' --exclude '/node_modules/*' --exclude '/storage/*' --exclude '/.env' -e "ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no" ${local_dir} ${remote_user}@${remote_host}:${remote_dir}
          ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no ${remote_user}@${remote_host} "cd ${remote_dir} && php artisan migrate && php artisan config:cache && php artisan route:cache && php artisan view:cache && php artisan storage:link"
#          ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no ${remote_user}@${remote_host} "sudo chmod -R 775 /var/www/test; sudo chgrp -R www-data /var/www/test/storage /var/www/test/bootstrap/cache"

#  staging-deploy:
#    needs: [tests, build]
#    runs-on: ubuntu-latest
#    if: github.ref != 'refs/heads/master'
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Deployment
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          username: ${{ secrets.SSH_USERNAME }}
#          script: |
#            cd /var/www/staging
#            git checkout -f
#            git pull
#            composer install --optimize-autoloader --no-dev --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
#            php artisan key:generate
#            php artisan migrate
#            php artisan config:cache
#            php artisan route:cache
#            php artisan view:cache

#            npm run production

#  production-deploy:
#    needs: tests
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/master'
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Deployment
#        uses: appleboy/ssh-action@main
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          username: ${{ secrets.SSH_USERNAME }}
#          script: |
#            cd /var/www/html/
#            git checkout -f
#            git pull
